{"version":3,"sources":["components/CharacterCard/index.js","components/Navbar/index.js","components/Modal/index.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","src","image","alt","name","onClick","clickCharacter","Navbar","currentScore","topScore","MyModal","Modal","Object","assign","this","size","aria-labelledby","centered","Header","closeButton","Title","id","title","Body","message","Footer","Button","onHide","Component","App","state","characters","modalShow","thisCharacter","_this","filter","character","clicked","gameOver","setState","shuffle","win","msg","concat","map","array","i","j","temp","length","Math","floor","random","_this2","components_Navbar","components_CharacterCard","key","components_Modal","show","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.13a4f176.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n  return (\n    \n      <div className=\"card img-container\">\n        <img src={props.image} alt={props.name} onClick={() => props.clickCharacter(props.name)} />\n      </div>\n    \n  );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Navbar = props => (\n  <nav className=\"navbar\">\n      <div className=\"row\">\n          <div className=\"col-sm\">\n              Current Score: {props.currentScore} \n          </div>\n          <div className=\"col-sm\">\n              Game of Thrones\n          </div>\n          <div className=\"col-sm\">\n              Top Score: {props.topScore}\n          </div>\n      </div>\n  </nav>\n);\n\nexport default Navbar;\n\n\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nclass MyModal extends Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {this.props.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4 className=\"title\">{this.props.message}</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyModal;","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Navbar from \"./components/Navbar\";\nimport characters from \"./characters.json\";\nimport MyModal from \"./components/Modal\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    characters,\n    currentScore: 0,\n    topScore: 0,\n    modalShow: false,\n    message: \"\"\n  };\n\n  clickCharacter = (name) => {\n    let thisCharacter = this.state.characters.filter(character => character.name === name)[0],\n      currentScore = this.state.currentScore + 1;\n\n    if (thisCharacter.clicked) {\n      this.gameOver(false, name);\n    }\n    else {\n      if (!thisCharacter.clicked && currentScore === 15) return this.gameOver(true);\n\n      thisCharacter.clicked = true;\n      this.setState(\n        {\n          currentScore: currentScore,\n          topScore: (currentScore > this.state.topScore) ? currentScore : this.state.topScore,\n          characters: this.shuffle(this.state.characters)\n        }\n      );\n    }\n\n  };\n\n  gameOver = (win, name) => {\n    const msg = (win) ? \"Congratulations! You successfully only clicked on each character one time!\" : `Oops! You already clicked on ${name}. Start game over.`;\n\n    this.state.characters.filter(character => character.clicked === true).map(character => character.clicked = false);\n\n    this.setState(\n      {\n        currentScore: 0,\n        characters: this.shuffle(this.state.characters),\n        message: msg,\n        modalShow: true,\n      }\n    )\n  }\n\n  // Fisher-Yates Shuffle from https://www.frankmitchell.org/2015/01/fisher-yates/\n  shuffle = (array) => {\n    let i = 0\n      , j = 0\n      , temp = null\n\n    for (i = array.length - 1; i > 0; i -= 1) {\n      j = Math.floor(Math.random() * (i + 1))\n      temp = array[i]\n      array[i] = array[j]\n      array[j] = temp\n    }\n    return array;\n  };\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n\n      <div>\n        <Navbar\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n        />\n        <div className=\"container\">\n        \n          \n          <div className=\"cardHolder justify-content-center row\">\n            {this.state.characters.map(character => (\n              <CharacterCard\n                key={character.name}\n                name={character.name}\n                image={character.image}\n                clickCharacter={this.clickCharacter}\n              />\n            ))}\n          </div>\n          <MyModal\n            show={this.state.modalShow}\n            onHide={modalClose}\n            message={this.state.message}\n            // title=\"Game Over!\"\n          />\n          \n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}